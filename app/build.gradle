plugins {
    id 'java'
    id 'org.springdoc.openapi-gradle-plugin' version '1.8.0'
    id 'io.swagger.swaggerhub' version '1.1.0'
}

jar {
    enabled = false
}

dependencies {
    implementation project(':notification')
    implementation project(':openapi')

    // spring web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // sql database
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    // mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // jwt
    implementation 'com.auth0:java-jwt:4.4.0'

    // https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-s3
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.12.637'

    // documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:+'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

def querydslDir = "build/generated/querydsl"
sourceSets {
    main.java.srcDirs += [querydslDir]
}

tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
    file(querydslDir).deleteDir()
}

openApi {
    apiDocsUrl.set("http://localhost:8080/v3/api-docs.yaml")
    outputDir.set(file("$buildDir/docs"))
    outputFileName.set("swagger.yaml")
    waitTimeInSeconds.set(10)
    customBootRun {
        args.set(["--spring.profiles.active=dev"])
    }
}

import java.text.SimpleDateFormat

swaggerhubUpload {
    def dateVersion = new SimpleDateFormat('yyyy-MM-dd').format(new Date())

    api 'trip-vote_api'
    owner 'strong-potato'
    version dateVersion
    format 'yaml'
    inputFile "$buildDir/docs/swagger.yaml"
    token System.getenv("SWAGGERHUB_API_KEY")
}